DAT_00115038 = "pizzapizzapizzapizzapizz"

LOCAL 58 = ? 

XOR avec la cle DAT_00115038 = "pizzapizzapizzapizzapizz"

ARM 

*param_1 =   0x1549170f1311081d; SWAP = 1d0811130f174915 = making o
param_1[1] = 0x15131d5a1903000d; SWAP = 0d0003195a1d1315 = 
param_1[2] = 0x14130817005a0e08; SWAP = 080e5a0017081314 = 


secret key = 1d0811130f174915 0d0003195a1d1315 080e5a0017081314
avec le python programme : solution = making owasp great again

x86.64

    *(undefined4 *)*param_1 = 0x1311081d; = 1d081113
    *(undefined4 *)(*param_1 + 4) = 0x1549170f = 0f174915
    *(undefined4 *)(*param_1 + 8) = 0x1903000d = 0d000319
    *(undefined4 *)(*param_1 + 0xc) = 0x15131d5 = 051d1315
    *(undefined8 *)param_1[1] = 0x14130817005a0e08;   =  080e5a0017081314



secret key = 1d0811130f1749150d0003195a1d1315080e5a0017081314
key = "pizzapizzapizzapizzapizz"


SOLUTION : 

En lisant le code on se rends compte de la librairie (libfoo). On voit des fonctions comme bar, init mais surtout on voit la cle XOR. 

En utilisant ghidra on peut tout de suite allez voir la fct init et voir que la cle est initialisé. 

Dans la fct bar on se rends compte qu'il fait un xor avec la cle sur la solution mais la solution n'est pas visible. Elle est init dans une autre fct de (1500 lignes en reverse)

Expres pour nous brouiller mais en allant a la fin de la fct on voit que param1 est affecte a plusieurs donnee voir au dessus ! 

Grace a ça il nous reste plus qu'a effectuer un XOR sur les donnees trouve avec la cé attention les donnes sont en little endiant donc faut les swaps ! 

